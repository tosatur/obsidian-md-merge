import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from "fs";
import path from "path";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
If you want to view the source, please visit the GitHub repository of this plugin.
*/`;

const prod = process.argv[2] === "production";
const pkg = JSON.parse(fs.readFileSync("package.json", "utf-8"));
const manifest = {
  id: "md-merge",
  name: ".md Merge",
  version: pkg.version,
  minAppVersion: "0.12.0",
  description: "Merge all markdown files from a folder into a single file.",
  author: pkg.author || "Tosatur",
  main: "main.js"
};

const versions = {
  [pkg.version]: "https://github.com/tosatur/obsidian-md-merge/releases/download/v" + pkg.version + "/md-merge.zip"
};

const outdir = prod ? "release" : ".";

const context = await esbuild.context({
  banner: {
    js: banner
  },
  entryPoints: ["main.ts"],
  bundle: true,
  external: [
    "obsidian",
    "electron",
    "@codemirror/*",
    "@lezer/*",
    ...builtins
  ],
  format: "cjs",
  target: "es2018",
  logLevel: "info",
  sourcemap: prod ? false : "inline",
  treeShaking: true,
  outfile: path.join(outdir, "main.js")
});

if (prod) {
  await context.rebuild();

  // Ensure release dir exists
  if (!fs.existsSync("release")) fs.mkdirSync("release");

  // Write manifest.json
  fs.writeFileSync("release/manifest.json", JSON.stringify(manifest, null, 2));

  // Write versions.json
  fs.writeFileSync("release/versions.json", JSON.stringify(versions, null, 2));

  console.log("âœ… Production build complete. Files are in the 'release/' folder.");
  process.exit(0);
} else {
  await context.watch();
  console.log("ðŸ‘€ Watching for changes...");
  
}